/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package stockify_backend_golang/src */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h>

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 3 "main.go"

#include <stdlib.h>

#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef size_t GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
#ifdef _MSC_VER
#include <complex.h>
typedef _Fcomplex GoComplex64;
typedef _Dcomplex GoComplex128;
#else
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;
#endif

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif

extern __declspec(dllexport) void AddUser(char* userName, char* designation, char* sapId, char* ipPhone, char* roomNo, char* floor);
extern __declspec(dllexport) char* GetAllUsers();
extern __declspec(dllexport) char* GetUserById(long long unsigned int id);
extern __declspec(dllexport) void UpdateUser(long long unsigned int id, char* userName, char* designation, char* sapId, char* ipPhone, char* roomNo, char* floor);
extern __declspec(dllexport) void DeleteUserById(long long unsigned int id);
extern __declspec(dllexport) char* GetFilteredUsers(char* search, char* sortBy, char* sortOrder);
extern __declspec(dllexport) void AddItemFull(char* assetNo, char* modelNo, char* deviceType, char* serialNo, long long int receivedDate, long long int warrantyDate, char* assetStatus, char* hostName, char* ipPort, char* macAddress, char* osVersion, char* facePlateName, char* switchPort, char* switchIpAddress, long long unsigned int assignedToID);
extern __declspec(dllexport) char* GetAllItems();
extern __declspec(dllexport) char* GetItemById(long long unsigned int id);
extern __declspec(dllexport) void UpdateItemFull(long long unsigned int id, char* assetNo, char* modelNo, char* deviceType, char* serialNo, long long int receivedDate, long long int warrantyDate, char* assetStatus, char* hostName, char* ipPort, char* macAddress, char* osVersion, char* facePlateName, char* switchPort, char* switchIpAddress, long long unsigned int assignedToID);
extern __declspec(dllexport) void DeleteItemById(long long unsigned int id);
extern __declspec(dllexport) char* GetFilteredItems(char* deviceType, char* assetStatus, long long unsigned int assignedToID, char* search, char* sortBy, char* sortOrder);
extern __declspec(dllexport) void FreeCString(char* str);

#ifdef __cplusplus
}
#endif
