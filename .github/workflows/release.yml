name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'
          cache: true

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
          cache: true

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            stockify_app_flutter/.dart_tool
            stockify_app_flutter/build
          key: ${{ runner.os }}-flutter-${{ hashFiles('stockify_app_flutter/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache APT packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt
          key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/*.yml') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install Linux dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev libblkid-dev liblzma-dev

      - name: Enable Flutter Linux desktop
        run: flutter config --enable-linux-desktop

      - name: Get Flutter dependencies
        working-directory: stockify_app_flutter
        run: flutter pub get

      - name: Make build script executable
        run: chmod +x scripts/build_linux.sh

      - name: Build Linux App
        run: ./scripts/build_linux.sh

      - name: List dist directory contents
        run: |
          echo "Contents of dist directory:"
          ls -la dist/ || echo "dist directory not found"

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: dist/*.tar.gz
          if-no-files-found: error

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'
          cache: true

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
          cache: true

      - name: Add Inno Setup to PATH
        run: |
          echo "C:\Program Files (x86)\Inno Setup 6" >> $env:GITHUB_PATH

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            stockify_app_flutter/.dart_tool
            stockify_app_flutter/build
          key: ${{ runner.os }}-flutter-${{ hashFiles('stockify_app_flutter/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache MSYS2
        uses: actions/cache@v4
        with:
          path: C:\msys64
          key: ${{ runner.os }}-msys2-${{ hashFiles('.github/workflows/*.yml') }}
          restore-keys: |
            ${{ runner.os }}-msys2-

      - name: Enable Flutter Windows desktop
        run: flutter config --enable-windows-desktop

      - name: Get Flutter dependencies
        working-directory: stockify_app_flutter
        run: flutter pub get

      - name: Enable CGO for Go
        run: |
          echo "CGO_ENABLED=1" >> $env:GITHUB_ENV

      - name: Setup MinGW for CGO
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-pkg-config

      - name: Add MinGW to PATH
        run: |
          echo "C:\msys64\mingw64\bin" >> $env:GITHUB_PATH

      - name: Build Windows App
        run: |
          call scripts\build_windows.bat
        shell: cmd

      - name: List dist directory contents
        run: |
          echo "Contents of dist directory:"
          dir dist\ || echo "dist directory not found"
        shell: cmd

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/*.exe
          if-no-files-found: error

  create-release:
    name: Create Release
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: release-assets

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: release-assets

      - name: List release assets
        run: |
          echo "Release assets:"
          ls -la release-assets/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            release-assets/*.tar.gz
            release-assets/*.exe