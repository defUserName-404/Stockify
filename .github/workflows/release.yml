name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'  # Updated to a stable version

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'  # Updated to a stable version
          channel: 'stable'

      - name: Install Linux dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev libblkid-dev liblzma-dev

      - name: Enable Flutter Linux desktop
        run: flutter config --enable-linux-desktop

      - name: Get Flutter dependencies
        working-directory: stockify_app_flutter
        run: flutter pub get

      - name: Make build script executable
        run: chmod +x scripts/build_linux.sh

      - name: Build Linux App
        run: ./scripts/build_linux.sh

      - name: List dist directory contents
        run: |
          echo "Contents of dist directory:"
          ls -la dist/ || echo "dist directory not found"

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: dist/*.tar.gz
          if-no-files-found: error

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'  # Updated to a stable version

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'  # Updated to a stable version
          channel: 'stable'

      - name: Setup Inno Setup
        run: |
          Invoke-WebRequest -Uri "https://files.jrsoftware.org/is/6/innosetup-6.2.2.exe" -OutFile "innosetup.exe"
          Start-Process -FilePath "innosetup.exe" -ArgumentList "/VERYSILENT", "/SUPPRESSMSGBOXES", "/NORESTART" -Wait
          echo "C:\Program Files (x86)\Inno Setup 6" >> $env:GITHUB_PATH

      - name: Enable Flutter Windows desktop
        run: flutter config --enable-windows-desktop

      - name: Get Flutter dependencies
        working-directory: stockify_app_flutter
        run: flutter pub get

      - name: Enable CGO for Go
        run: |
          echo "CGO_ENABLED=1" >> $env:GITHUB_ENV

      - name: Install TDM-GCC for CGO
        run: |
          Invoke-WebRequest -Uri "https://github.com/jmeubank/tdm-gcc/releases/download/v10.3.0-tdm64-2/tdm64-gcc-10.3.0-2.exe" -OutFile "tdm-gcc.exe"
          Start-Process -FilePath "tdm-gcc.exe" -ArgumentList "/S" -Wait
          echo "C:\TDM-GCC-64\bin" >> $env:GITHUB_PATH

      - name: Build Windows App
        run: |
          call scripts\build_windows.bat
        shell: cmd

      - name: List dist directory contents
        run: |
          echo "Contents of dist directory:"
          dir dist\ || echo "dist directory not found"
        shell: cmd

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/*.exe
          if-no-files-found: error

  create-release:
    name: Create Release
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: release-assets

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: release-assets

      - name: List release assets
        run: |
          echo "Release assets:"
          ls -la release-assets/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            release-assets/*.tar.gz
            release-assets/*.exe
